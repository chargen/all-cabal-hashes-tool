deploy:
  provider: s3
  access_key_id: AKIAIAVQAXMLLEPM4I5A
  secret_access_key:
    secure: MMu6HLVnsKQmRN98hPjxcALn21UP5rgmrCQt17HC5EQLKR+O/CuTngU3cZoIWIlkQrl1KIBZ5uAFBO5ywtYC8CGUfhZWBjt8IPUNWQRkKmbRYEB06qcybpdVGjt6X2i6E4hWWvThagpczWYZ30isbWBSDRaL8lxMMyEnkMxlCUQ=
  bucket: stackage-travis
  acl: public_read
  skip_cleanup: true
  local_dir: to-travis
  upload-dir: all-cabal-hashes-tool
  on:
    repo: commercialhaskell/all-cabal-hashes-tool
    branch: master

env:
 - CABALVER=1.20 GHCVER=7.8.4

before_install:
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER # see note about happy/alex
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install alex happy
 - cabal install --only-dependencies --enable-tests --enable-benchmarks

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)

 - mkdir -p to-travis
 - cp dist/build/all-cabal-hashes-tool/all-cabal-hashes-tool to-travis
 - strip to-travis/all-cabal-hashes-tool
 - bzip2 to-travis/all-cabal-hashes-tool
